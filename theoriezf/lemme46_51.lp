require open zf.theoriezf.logique;
require open zf.theoriezf.lemme1_6;
require open zf.theoriezf.lemme7_13;
require open zf.theoriezf.lemme14_18;
require open zf.theoriezf.lemme19_21;
require open zf.theoriezf.lemme22_27;
require open zf.theoriezf.lemme28_34;
require open zf.theoriezf.lemme35_41;
require open zf.theoriezf.lemme42_45;
require open zf.theoriezf.extension;
require open zf.theoriezf.lemme_extension;

opaque symbol lemme46 : π(∀ g (λ a, ¬ (a ∈ empty_set)))
≔ begin
assume a;
simpl π;
assume H;
apply ExElim n _ H _;
assume x Hx;
apply ExElim n _ ((and_eg _ _ (lemme23 (λ _, empty_set) fF omega x)) (and_eg _ _ Hx)) _;
assume y Hy;
apply and_ed _ _ Hy;
end;

opaque symbol lemme47 : π(empty_set simeq (cr omega (i O)))
≔ begin
apply lemmeExt empty_set (cr omega (i O)) _;
assume x;
apply and_i;
assume H;
apply ExElim n _ H _;
assume y Hy;
apply ExElim n _ ((and_eg _ _ (lemme23 (λ _, empty_set) fF omega y)) (and_eg _ _ Hy)) _;
assume z Hz;
apply f_e (x ∈ cr omega (i O)) (and_ed _ _ Hz);
assume H;
apply ExElim n _ H _;
assume y Hy;
apply ExElim n _ ((and_eg _ _ (lemme24 y O)) (and_eg _ _ Hy)) _;
assume z Hz;
apply f_e (x ∈ empty_set) (and_ed _ _ Hz);
end;

opaque symbol lemmeJoinPair : π(∀ g (λ a, ∀ g (λ c, (c ∈ (join (pair a (pair a a)))) ⇔ ((c ∈ a) ∨ (c simeq a)))))
≔ begin
assume a c;
apply and_i;
assume H1;
apply ExElim g _ (and_eg _ _ (lemme42 (pair a (pair a a)) c) H1) _;
assume x Hx;
apply or_e _ _ _ ((and_eg _ _ (lemme43 a (pair a a) x)) (and_ed _ _ Hx));
assume Hxa;
apply or_ig;
apply lemme31 c x a (and_i _ _ (and_eg _ _ Hx) Hxa);
assume Hxaa;
apply or_id;
apply or_e _ _ _ (and_eg _ _ (lemme43 a a c) (lemme31 c x (pair a a) (and_i _ _ (and_eg _ _ Hx) Hxaa)));
assume Hca;
apply Hca;
assume Hca;
apply Hca;
assume H2;
apply and_ed _ _ (lemme42 (pair a (pair a a)) c) _;
apply or_e _ _ _ H2;
assume Hca;
apply ExIntro g a _ _;
apply and_i _ _ Hca _;
apply (and_ed _ _ (lemme43 a (pair a a) a)) _;
apply or_ig;
apply lemme3 a;
assume Hca;
apply ExIntro g (pair a a) _ _;
apply and_i _ _ _ _;
apply (and_ed _ _ (lemme43 a a c)) _;
apply or_ig;
apply Hca;
apply (and_ed _ _ (lemme43 a (pair a a) (pair a a))) _;
apply or_id;
apply lemme3 (pair a a);
end;

opaque symbol lemme48 : π(∀ g (λ a, ∀ n (λ y, (a simeq (cr omega (i y))) ⇒ ((join (pair a (pair a a))) simeq (cr omega (i (Succ y)))))))
≔ begin
assume a y H;
apply lemmeExt (join (pair a (pair a a))) (cr omega (i (Succ y))) _;
assume c;
apply and_i;
assume H1;
apply imp_e (∃ n (λ z, ((z < y) ∨ (z = y)) ∧ (c simeq (cr omega (i z))))) _ _ _;
assume H';
apply ExElim n _ H' _;
assume z Hz;
apply ExIntro n (i z) _ _;
apply and_i;
apply (and_ed _ _ (lemme24 (i z) (Succ y))) _;
apply ExIntro n z _ _;
apply and_i _ _ (lemme1 (i z)) (and_eg _ _ Hz);
apply and_ed _ _ Hz;
apply imp_e ((∃ n (λ z, (z < y) ∧ (c simeq (cr omega (i z))))) ∨ (c simeq (cr omega (i y)))) _ _ _;
assume H';
apply or_e _ _ _ H';
assume H'';
apply ExElim n _ H'' _;
assume z Hz;
apply ExIntro n z _ _;
apply and_i;
apply or_ig;
apply and_eg _ _ Hz;
apply and_ed _ _ Hz;
assume H'';
apply ExIntro n y _ _;
apply and_i;
apply or_id;
apply lemme1 y;
apply H'';
apply imp_e ((c ∈ (cr omega (i y))) ∨ (c simeq (cr omega (i y)))) _ _ _;
assume H';
apply or_e _ _ _ H';
assume H'';
apply or_ig;
apply ExElim n _ H'' _;
assume x Hx;
apply ExElim n _ (and_eg _ _ (lemme24 x y) (and_eg _ _ Hx)) _;
assume z Hz;
apply ExIntro n z _ _;
apply and_i _ _ (and_ed _ _ Hz) _;
apply imp_i (i z = x) _ _ _;
assume K;
apply imp_i (x = i z) _ _ _;
assume K';
apply K' (λ w, c simeq (cr omega w)) _;
apply and_ed _ _ Hx;
apply and_eg _ _ Hz;
apply lemmeSymEg x (i z) (and_eg _ _ Hz);
assume H'';
apply or_id;
apply H'';
apply imp_e ((c ∈ a) ∨ (c simeq a)) _ _ _;
assume H';
apply or_e _ _ _ H';
assume Hca;
apply or_ig;
apply lemme31 c a (cr omega (i y)) (and_i _ _ Hca H);
assume Hca;
apply or_id;
apply lemme5 c a (cr omega (i y)) (and_i _ _ Hca H);
apply and_eg _ _ (lemmeJoinPair a c) H1;
assume H2;
apply imp_e ((c ∈ a) ∨ (c simeq a)) _ _ _;
assume H';
apply and_ed _ _ (lemmeJoinPair a c) H';
apply imp_e ((c ∈ (cr omega (i y))) ∨ (c simeq (cr omega (i y)))) _ _ _;
assume H';
apply or_e _ _ _ H';
assume K;
apply or_ig;
apply lemme31 c (cr omega (i y)) a (and_i _ _ K (lemme4 a (cr omega (i y)) H));
assume K';
apply or_id;
apply lemme5 c (cr omega (i y)) a (and_i _ _ K' (lemme4 a (cr omega (i y)) H));
apply imp_e ((∃ n (λ z, (z < y) ∧ (c simeq (cr omega (i z))))) ∨ (c simeq (cr omega (i y)))) _ _ _;
assume H';
apply or_e _ _ _ H';
assume K;
apply or_ig;
apply ExElim n _ K _;
assume z Hz;
apply ExIntro n (i z) _ _;
apply and_i _ _ _ (and_ed _ _ Hz);
apply (and_ed _ _ (lemme24 (i z) y)) _;
apply ExIntro n z _ _;
apply and_i _ _ (lemme1 (i z)) (and_eg _ _ Hz);
assume K';
apply or_id;
apply K';
apply imp_e (∃ n (λ z, ((z < y) ∨ (z = y)) ∧ (c simeq (cr omega (i z))))) _ _ _;
assume H';
apply ExElim n _ H' _;
assume z Hz;
apply or_e _ _ _ (and_eg _ _ Hz);
assume K;
apply or_ig;
apply ExIntro n z _ _;
apply and_i _ _ K (and_ed _ _ Hz);
assume K';
apply or_id;
apply imp_i (y = z) _ _ _;
assume M;
apply imp_i (z = y) _ _ _;
assume M';
apply M' (λ w, c simeq (cr omega (i w))) _;
apply and_ed _ _ Hz;
apply K';
apply lemmeSymEg z y K';
apply ExElim n _ H2 _;
assume x Hx;
apply ExElim n _ (and_eg _ _ (lemme24 x (Succ y)) (and_eg _ _ Hx)) _;
assume z Hz;
apply ExIntro n z _ _;
apply and_i _ _ (and_ed _ _ Hz) _;
apply imp_i (i z = x) _ _ _;
assume M;
apply imp_i (x = i z) _ _ _;
assume M';
apply M' (λ w, c simeq (cr omega w)) _;
apply and_ed _ _ Hx;
apply and_eg _ _ Hz;
apply lemmeSymEg x (i z) (and_eg _ _ Hz);
end;

opaque symbol lemme49 : π(empty_set ∈ omega)
≔ begin
apply ExIntro n (i O) _ _;
apply and_i;
apply (and_ed _ _ (lemme25 (i O))) _;
apply ExIntro n O _ _;
apply and_i;
apply lemme1 (i O);
apply Vrai;
apply lemme47;
end;

opaque symbol lemme50 : π(∀ g (λ a, (a ∈ omega) ⇒ ((join (pair a (pair a a))) ∈ omega)))
≔ begin
assume a Ha;
apply ExElim n _ Ha _;
assume x Hx;
apply ExElim n _ ((and_eg _ _ (lemme25 x)) (and_eg _ _ Hx));
assume y Hy;
apply ExIntro n (i (Succ y)) _ _;
apply and_i;
apply (and_ed _ _ (lemme25 (i (Succ y)))) _;
apply ExIntro n (Succ y) _ _;
apply and_i;
apply lemme1 (i (Succ y));
apply and_ed _ _ Hy;
apply lemme48 a y _;
apply imp_i (i y = x) _ _ _;
assume H1;
apply imp_i (x = i y) _ _ _;
assume H2;
apply H2 (λ w, a simeq (cr omega w)) (and_ed _ _ Hx);
apply lemmeSymEg (i y) x H1;
apply lemmeSymEg x (i y) (and_eg _ _ Hy);
end;

opaque symbol lemme51 : π(Ind omega)
≔ begin
apply and_i;
apply lemme49;
apply lemme50;
end;